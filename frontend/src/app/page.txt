'use client'

import { useState, useEffect } from 'react'
import Chart from './components/Chart/Chart'
import OrderBook from './components/OrderBook/OrderBook'
import SignalWidget from './components/SignalWidget/SignalWidget'
import OrderForm from './components/OrderForm/OrderForm'
import BacktestResults from './components/BacktestResults/BacktestResults'
import { useWebSocket } from './hooks/useWebSocket'
import { useApi } from './hooks/useApi'
import './styles/globals.css'

export default function Dashboard() {
  const [selectedSymbol, setSelectedSymbol] = useState('BTC/USDT')
  const [chartData, setChartData] = useState<any[]>([])
  const { connect, messages } = useWebSocket()
  const { fetchData } = useApi()

  useEffect(() => {
    // Connect to WebSocket
    connect('ws://localhost:8000/ws')

    // Fetch initial chart data
    loadChartData()
  }, [selectedSymbol])

  const loadChartData = async () => {
    try {
      const data = await fetchData(`/api/chart/${selectedSymbol}?timeframe=1h&limit=100`)
      setChartData(data)
    } catch (error) {
      console.error('Error loading chart data:', error)
    }
  }

  return (
    <div className="dashboard">
      <header className="dashboard-header">
        <h1>AI-Tradingview-Core</h1>
        <div className="symbol-selector">
          <select 
            value={selectedSymbol} 
            onChange={(e) => setSelectedSymbol(e.target.value)}
          >
            <option value="BTC/USDT">BTC/USDT</option>
            <option value="ETH/USDT">ETH/USDT</option>
            <option value="XRP/USDT">XRP/USDT</option>
            <option value="EUR/USD">EUR/USD</option>
          </select>
        </div>
      </header>

      <div className="dashboard-grid">
        <div className="chart-section">
          <Chart data={chartData} symbol={selectedSymbol} />
        </div>
        
        <div className="sidebar">
          <SignalWidget symbol={selectedSymbol} />
          <OrderBook symbol={selectedSymbol} />
          <OrderForm symbol={selectedSymbol} />
        </div>
        
        <div className="backtest-section">
          <BacktestResults symbol={selectedSymbol} />
        </div>
      </div>
    </div>
  )
}
